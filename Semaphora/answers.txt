1.
	Q. Define following concepts.
		a. 
			Conceptname: re-entrancy
			Definition: re-entrancy means that when an apllication that has
						concurrent tasks objects that are used in tasks are
						made thread safe by allways copying all needed resources
						for task with task. So if same task is executed in two places 
						same time both would have own copy of instructions.

		b. 
			Conceptname: mutual exclusion
			Definition: Mutual exclusion mutex is method in computer sience
						for preventing race conditions between where many 
						concurrent processes access same shared data.
						Mutex locs resource while its been acessed.

		c. 
			Conceptname: atomic operation
			Definition:	Atomic operation is a operation which is thread safe and its
						execution cannot be interrupted by any other thead or similar 
						concurrent task.

2.
	Q. 
		Read article https://barrgroup.com/Embedded-Systems/How-To/Top-Ten-Nasty-Firmware-Bugs and also its continuation in part 2. 
		Which bugs are directly related to resource sharing? 

	A.	Deadlock, Race Condition and Non-Reentrant Function.

5.
	a.
		Q.	Fix the problem by disabling interrupts in critical code section (thus disabling context switches by timer interrupt). 
			Minimise the time interrupts are disabled. Measure time during which interrupts are disabled. 
			How would you need to use this result in RMA analysis (with blocking)?

		A.	
			cli();
			shared=0x0000;
			shared=0xFFFF;		
			sei();

			Interrupts are disabled 0,50 Âµs


7. 
	Q. Which task gets preempted if both tasks have identical priorities?

	A. 
		If two task have equal priorities tasks will be preempted according to wait time in task.
		If one of tasks don't have any wait time it will take all the available.
